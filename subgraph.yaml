specVersion: 1.0.0
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum
    name: Registry
    network: { { network } }
    source:
      address: "{{ Registry.address }}"
      abi: Registry
      startBlock: { { Registry.startBlock } }
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Factory
        - Product
        - Token
      abis:
        - name: Registry
          file: ./abis/Registry.json
      eventHandlers:
        - event: FactoryAdded(indexed address)
          handler: handleFactoryAdded
        - event: FactoryRemoved(indexed address)
          handler: handleFactoryRemoved
        - event: ProductAdded(address[])
          handler: handleProductAdded
        - event: ProductRemoved(address[])
          handler: handleProductRemoved
        - event: TokenAdded(address[],address[])
          handler: handleTokenAdded
        - event: TokenRemoved(address[])
          handler: handleTokenRemoved
      file: ./src/registry.ts

templates:
  - kind: ethereum/contract
    name: InaAccountFactory
    network: { { network } }
    source:
      abi: InaAccountFactory
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Account
      abis:
        - name: InaAccountFactory
          file: ./abis/InaAccountFactory.json
      eventHandlers:
        - event: AccountCreated(indexed address,address[])
          handler: handleInaAccountCreated
      file: ./src/factory.ts

  - kind: ethereum/contract
    name: MultiOwnerLightAccount
    network: { { network } }
    source:
      abi: MultiOwnerLightAccount
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Account
      abis:
        - name: MultiOwnerLightAccount
          file: ./abis/MultiOwnerLightAccount.json
      eventHandlers:
        - event: OwnersUpdated(address[],address[])
          handler: handleOwnersUpdated
      file: ./src/account.ts

  - kind: ethereum/contract
    name: Token
    network: { { network } }
    source:
      abi: ERC20
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Token
        - Account
        - Holding
        - Transaction
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
      file: ./src/token.ts

  - kind: ethereum/contract
    name: PriceFeed
    network: { { network } }
    source:
      abi: AggregatorV3Interface
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - PriceFeed
      abis:
        - name: AggregatorV3Interface
          file: ./abis/AggregatorV3Interface.json
      eventHandlers:
        - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
          handler: handleAnswerUpdated
      file: ./src/price-feed.ts
